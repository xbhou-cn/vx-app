package com.hz.love.controller;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.alibaba.druid.util.StringUtils;
import com.hz.love.common.CustomException;
import com.hz.love.em.MsgEnum;
import com.hz.love.model.CCmUser;
import com.hz.love.result.ResultEntity;
import com.hz.love.service.IFileService;
import com.hz.love.validator.groups.CommonAddGroup;

/**
 * <b>概述</b>：<br>
 * --文件上传下载处理--
 * <p>
 * <b>功能</b>：<br>
 * --文件上传下载处理--
 *
 * @author HZ
 */
@RestController
@RequestMapping("/file")
public class FileController extends BaseController {
    @Autowired
    private IFileService fileService;

    @PostMapping("/uploadFile")
    public ResultEntity uploadFile(@RequestParam("file") MultipartFile file,
            @RequestParam("modularPath") String modularPath, HttpServletRequest request, HttpServletResponse response) {
        logger.info("文件上传开始");
        ResultEntity result;
        try {
            this.validate(file, CommonAddGroup.class);
            result = fileService.uploadFile(file, modularPath);
        } catch (CustomException ex) {
            result = new ResultEntity(false, ex.getErrorMsg());
            logger.error(ex.getMessage());
        } catch (Exception e) {
            String errMsg = "文件上传异常";
            if ("dev".equals(this.edition)) {
                errMsg = e.getMessage();
            }
            result = new ResultEntity(false, errMsg);
            logger.error(e.getMessage());
        }
        logger.info("文件上传结束");
        return result;
    }

    @GetMapping("/{fileId}")
    public ResultEntity saveUser(String fileId) {
        logger.info("文件下载开始");
        ResultEntity result;
        try {
            if (StringUtils.isEmpty(fileId)) {
                result = new ResultEntity(false, "");
            } else {
                result = fileService.getDownloadFile(fileId);
            }
        } catch (Exception e) {
            result = new ResultEntity(false, e.getMessage());
            logger.info("文件下载异常");
        }
        logger.info("文件下载结束");
        return result;
    }
}
